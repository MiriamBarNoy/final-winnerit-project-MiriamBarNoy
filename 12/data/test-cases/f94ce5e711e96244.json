{"uid":"f94ce5e711e96244","name":"get resource by ID","fullName":"tests.api.test_resources_api#test_get_specific_resource","historyId":"c44edb978ab4c03188ddf03401be67df","time":{"start":1736878938330,"stop":1736878938370,"duration":40},"status":"failed","statusMessage":"AssertionError: assert 2007 == 'bla'","statusTrace":"resource_id = 8, field = 'year', value = 'bla'\nresource_end_point = 'https://reqres.in/api/unknown'\n\n    @pytest.mark.api\n    @pytest.mark.parametrize(\"resource_id,field,value\",resource_data)\n    @allure.feature(\"API resource tests\")\n    @allure.story(\"get resource by ID\")\n    @allure.title(\"get resource by ID\")\n    def test_get_specific_resource(resource_id,field,value,resource_end_point):\n        response = requests.get(f'{resource_end_point}/{resource_id}')\n        assert response.status_code == 200\n        assert response.reason == \"OK\"\n        json_data = response.json()\n        actual_value = json_data.get(\"data\", {})  # this will access the data on json where above fields are\n        for key in field.split(\n                '.'):  # this will split the field string to a list of keys,e.g: \"data.email\", =['data', 'email']\n            actual_value = actual_value.get(key, None)\n>           assert actual_value == value\nE           AssertionError: assert 2007 == 'bla'\n\ntests/api/test_resources_api.py:38: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1736878936851,"stop":1736878936851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1736878936851,"stop":1736878936851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1736878936851,"stop":1736878936851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_verify_url","time":{"start":1736878936851,"stop":1736878936851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"_session_faker","time":{"start":1736878936851,"stop":1736878936852,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"resource_end_point","time":{"start":1736878938329,"stop":1736878938329,"duration":0},"status":"passed","steps":[{"name":"navigate to resources page:","time":{"start":1736878938329,"stop":1736878938329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"base_url_api","time":{"start":1736878938329,"stop":1736878938329,"duration":0},"status":"passed","steps":[{"name":"navigate to base page for api tests:","time":{"start":1736878938329,"stop":1736878938329,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"get resource by ID"},{"name":"feature","value":"API resource tests"},{"name":"tag","value":"api"},{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_resources_api"},{"name":"host","value":"fv-az798-793"},{"name":"thread","value":"6016-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_resources_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"field","value":"'year'"},{"name":"resource_id","value":"8"},{"name":"value","value":"'bla'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"35ab2babe9c10095","reportUrl":"https://MiriamBarNoy.github.io/final-winnerit-project-MiriamBarNoy/11//#testresult/35ab2babe9c10095","status":"failed","statusDetails":"AssertionError: assert 2007 == 'bla'","time":{"start":1736878831764,"stop":1736878831784,"duration":20}},{"uid":"f71b6379ab6faa2f","reportUrl":"https://MiriamBarNoy.github.io/final-winnerit-project-MiriamBarNoy/10//#testresult/f71b6379ab6faa2f","status":"failed","statusDetails":"AssertionError: assert 2007 == 'bla'","time":{"start":1736876903180,"stop":1736876903373,"duration":193}},{"uid":"88bf8ebb2287be7e","reportUrl":"https://MiriamBarNoy.github.io/final-winnerit-project-MiriamBarNoy/9//#testresult/88bf8ebb2287be7e","status":"failed","statusDetails":"AssertionError: assert 2007 == 'bla'","time":{"start":1736862397473,"stop":1736862397769,"duration":296}}]},"tags":["api"]},"source":"f94ce5e711e96244.json","parameterValues":["'year'","8","'bla'"]}